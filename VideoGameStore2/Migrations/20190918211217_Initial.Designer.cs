// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameStore2.Models;

namespace VideoGameStore2.Migrations
{
    [DbContext(typeof(GameStoreDBContext))]
    [Migration("20190918211217_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VideoGameStore2.Models.Developer", b =>
                {
                    b.Property<int>("DeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("Telephone");

                    b.HasKey("DeveloperId");

                    b.ToTable("Developer");

                    b.HasData(
                        new { DeveloperId = 1, City = "Tokyo", Name = "Konami", StreetAddress = "A road in Japan", Telephone = "123456789" },
                        new { DeveloperId = 2, City = "Mexico City", Name = "Squad", StreetAddress = "Probably poorly defined", Telephone = "0987654321" },
                        new { DeveloperId = 3, City = "Montreal", Name = "Uber Entertainment", StreetAddress = "some french road", Telephone = "83798273489" }
                    );
                });

            modelBuilder.Entity("VideoGameStore2.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("DeveloperId");

                    b.Property<int>("GenreId");

                    b.Property<string>("MinimumRequirements");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("GenreId");

                    b.ToTable("Game");

                    b.HasData(
                        new { Id = 3, Description = "Sneak a lot", DeveloperId = 1, GenreId = 1, MinimumRequirements = "PS4", Name = "Metal Gear Solid", Price = 59.99m },
                        new { Id = 4, Description = "Science the shit out stuff", DeveloperId = 2, GenreId = 2, MinimumRequirements = "A Computer", Name = "Kerbal Space Program", Price = 6.99m },
                        new { Id = 5, Description = "Science the shit out stuff, Harder", DeveloperId = 3, GenreId = 2, MinimumRequirements = "A Computer", Name = "Kerbal Space Program 2", Price = 69.99m }
                    );
                });

            modelBuilder.Entity("VideoGameStore2.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new { GenreId = 1, Description = "Games where you shoot things with guns", Name = "First Person Shooters" },
                        new { GenreId = 2, Description = "Pretending to be real life, but not", Name = "Simulation" }
                    );
                });

            modelBuilder.Entity("VideoGameStore2.Models.Game", b =>
                {
                    b.HasOne("VideoGameStore2.Models.Developer", "Dev")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VideoGameStore2.Models.Genre", "GameGenre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
